'use strict';

/*! [PROJECT_NAME] | Suitmedia */

(function (window, document, undefined) {

    var path = {
        css: myPrefix + 'assets/css/',
        js: myPrefix + 'assets/js/vendor/'
    };

    var assets = {
        _objectFit: path.js + 'object-fit-images.min.js',
        _headroom: path.js + 'headroom.min.js',
        _slick: path.js + 'slick.min.js'
    };

    var slickPrev = '<button type="button" class="slick-prev"><span class="fa fa-angle-left"></span></button>';
    var slickNext = '<button type="button" class="slick-next"><span class="fa fa-angle-right"></span></button>';

    var Site = {
        enableActiveStateMobile: function enableActiveStateMobile() {
            if (document.addEventListener) {
                document.addEventListener('touchstart', function () {}, true);
            }
        },
        WPViewportFix: function WPViewportFix() {
            if ('-ms-user-select' in document.documentElement.style && navigator.userAgent.match(/IEMobile/)) {
                var style = document.createElement('style');
                var fix = document.createTextNode('@-ms-viewport{width:auto!important}');

                style.appendChild(fix);
                document.head.appendChild(style);
            }
        },
        objectFitPolyfill: function objectFitPolyfill() {
            load(assets._objectFit).then(function () {
                objectFitImages();
            });
        },
        headRoom: function headRoom() {
            var myElement = document.querySelector('.site-header');
            // construct an instance of Headroom, passing the element
            var headroom = new Headroom(myElement);
            // initialise
            headroom.init();
        },
        introSlide: function introSlide() {
            var $slider = $('.section-intro');
            if (!$slider.length) return;
            Modernizr.load({
                load: assets._slick,
                complete: function complete() {
                    $slider.slick({
                        prevArrow: slickPrev,
                        nextArrow: slickNext
                    });
                }
            });
        },
        mainNav: function mainNav() {
            var $nav = $('.main-nav');

            function toggleNav(e) {
                e.preventDefault();
                if ($nav.hasClass('is-active')) {
                    $nav.removeClass('is-active');
                } else {
                    $nav.addClass('is-active');
                }
            }

            $nav.off('click', '.btn-trigger', toggleNav);
            $nav.on('click', '.btn-trigger', toggleNav);
        }
    };

    Promise.all([load(assets._headroom)]).then(function () {
        for (var fn in Site) {
            Site[fn]();
        }
        window.Site = Site;
    });

    function exist(selector) {
        return new Promise(function (resolve, reject) {
            var $elem = $(selector);

            if ($elem.length) {
                resolve($elem);
            } else {
                reject('no element found for ' + selector);
            }
        });
    }

    function load(url) {
        return new Promise(function (resolve, reject) {
            Modernizr.load({
                load: url,
                complete: resolve
            });
        });
    }

    function loadJSON(url) {
        return new Promise(function (resolve, reject) {
            fetch(url).then(function (res) {
                if (res.ok) {
                    resolve(res.json());
                } else {
                    reject('Network response not ok');
                }
            }).catch(function (e) {
                reject(e);
            });
        });
    }
})(window, document);